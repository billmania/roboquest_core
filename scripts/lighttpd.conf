server.modules = (
  "mod_openssl",
  "mod_auth",
  "mod_authn_file",
  "mod_accesslog",
  "mod_setenv",
  "mod_redirect",
  "mod_proxy",
  "mod_fastcgi"
)

server.document-root = "/var/www/html"
server.errorlog      = "/var/log/lighttpd/error.log"
accesslog.filename   = "/var/log/lighttpd/access.log"
accesslog.format     = "%t %h %r %s \"%{User-Agent}i\""
server.pid-file      = "/run/lighttpd.pid"
server.username      = "www-data"
server.groupname     = "www-data"
server.port          = 8079

fastcgi.debug = 1
fastcgi.server = (
    ".py" => (
        "python-fcgi" => (
            "socket" => "/tmp/" + "fastcgi.python.socket",
	    "bin-path" => "/var/www/backups/python-fcgi",
	    "max-procs" => 1,
            "check-local" => "disable"
        )
    )
)

$HTTP["scheme"] == "http" {
    $HTTP["host"] =~ "^(.*?)(:\d+)?$" {  ## %1 contains hostname without port
        url.redirect = ("" => "https://%1:5678${url.path}${qsa}")
        url.redirect-code = 308
    }
}

#
# Apache headers set
# Header always set "Docker-Distribution-Api-Version" "registry/2.0"
# Header onsuccess set "Docker-Distribution-Api-Version" "registry/2.0"
# RequestHeader set X-Forwarded-Proto "https"
#
#setenv.add-response-header = ("Docker-Distribution-Api-Version" => "registry/2.0")
#setenv.add-request-header = ("Docker-Distribution-Api-Version" => "registry/2.0")

$SERVER["socket"] == ":5678" {
  ssl.engine = "enable"
  ssl.pemfile = "/root/.acme.sh/registry.q4excellence.com_ecc/fullchain.cer"
  ssl.privkey = "/root/.acme.sh/registry.q4excellence.com_ecc/registry.q4excellence.com.key"
}

$HTTP["url"] =~ "^/v2" {
  $HTTP["request-method"] =~ "^(POST|PUT|PATCH|DELETE)$" {
    proxy.server = ( "" => ( ( "host" => "127.0.0.1", "port" => "5679" ) ) )
    proxy.header = ( "upgrade" => "enable" )

    auth.backend = "htpasswd" 
    auth.backend.htpasswd.userfile = "/etc/lighttpd/docker_users.txt"
    auth.require = ("/v2" => (
       "method"  => "basic",
       "realm"   => "Docker PUSH",
       "require" => "valid-user" 
    ))
  }

  $HTTP["request-method"] =~ "^(GET|HEAD)$" {
    proxy.server = ( "" => ( ( "host" => "127.0.0.1", "port" => "5679" ) ) )
    proxy.header = ( "upgrade" => "enable" )
  }
}

$HTTP["url"] =~ "^/secure" {
  $HTTP["request-method"] =~ "^(GET|HEAD|POST|PATCH|DELETE)$" {
    auth.backend = "htpasswd" 
    auth.backend.htpasswd.userfile = "/etc/lighttpd/docker_users.txt"
    auth.require = ("/secure" => (
       "method"  => "basic",
       "realm"   => "Docker PUSH",
       "require" => "valid-user" 
    ))
  }
}

# strict parsing and normalization of URL for consistency and security
# https://redmine.lighttpd.net/projects/lighttpd/wiki/Server_http-parseoptsDetails
# (might need to explicitly set "url-path-2f-decode" = "disable"
#  if a specific application is encoding URLs inside url-path)
server.http-parseopts = (
  "url-normalize-unreserved"=> "enable",# recommended highly
  "url-normalize-required"  => "enable",# recommended
  "url-ctrls-reject"        => "enable",# recommended
  "url-path-2f-decode"      => "enable",# recommended highly (unless breaks app)
  "url-path-dotseg-remove"  => "enable",# recommended highly (unless breaks app)
)

# default listening port for IPv6 falls back to the IPv4 port
include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
include_shell "/usr/share/lighttpd/create-mime.conf.pl"
include "/etc/lighttpd/conf-enabled/*.conf"
